{{- if not .Values.application.initialising -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "trackableappname" . }}
  labels:
    app: {{ template "appname" . }}
    track: "{{ .Values.application.track }}"
    chart: {{ template "chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "appname" . }}
      track: {{ .Values.application.track }}
      release: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 35%
      maxUnavailable: 35%
  template:
    metadata:
      labels:
        app: {{ template "appname" . }}
        track: {{ .Values.application.track }}
        release: {{ .Release.Name }}
    spec:
      imagePullSecrets:
{{ toYaml .Values.image.secrets | indent 10 }}
      initContainers:
        - name: init-postgres
          image: governmentpaas/psql
          command: ['sh', '-c', 'until psql "postgresql://{{ .Values.postgresql.postgresqlUsername }}:{{ .Values.postgresql.postgresqlPassword }}@{{ .Release.Name }}-postgresql/{{ .Values.postgresql.postgresqlDatabase }}" -c "SELECT 1"; do echo "waiting for postgres"; sleep 2; done;']
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.application.secretName }}
          envFrom:
            - secretRef:
                name: {{ . }}
          {{- end }}
          env:
            - name: BASE_URL
              value: {{ .Values.ingress.baseURL | trimSuffix "/" }}{{ .Values.ingress.path }}
{{- if .Values.environment.databaseUrl }}
            - name: DATABASE
              value: {{ .Values.environment.databaseUrl }}
{{- else }}
            - name: DATABASE
              value: postgresql://{{ .Values.postgresql.postgresqlUsername }}:{{ .Values.postgresql.postgresqlPassword }}@{{ .Release.Name }}-postgresql/{{ .Values.postgresql.postgresqlDatabase }}
{{- end }}
            - name: PORT
              value: {{ .Values.service.internalPort | quote }}
            - name: HORIZON
              value: {{ .Values.environment.mainnetHorizonUrl }}
            - name: HORIZON_TESTNET
              value: {{ .Values.environment.testnetHorizonUrl }}
          ports:
            - name: {{ .Values.service.name | quote }}
              containerPort: {{ .Values.service.internalPort }}
          livenessProbe:
            httpGet:
              path: {{ .Values.ingress.path | trimSuffix "/" }}/status/live
              port: {{ .Values.service.internalPort }}
          readinessProbe:
            httpGet:
              path: {{ .Values.ingress.path | trimSuffix "/" }}/status/live
              port: {{ .Values.service.internalPort }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- end -}}
